
#VRML V2.0 utf8

# ASimVR Polymerization CSTR Reactor Model
# This VRML file defines the 3D geometry and dynamic properties
# of a Continuous Stirred-Tank Reactor (CSTR) for polymerization.
# It is designed to be controlled and animated by Simulink via VR Sink.

WorldInfo {
  title "ASimVR Polymerization CSTR Reactor"
  info [ "Designed for dynamic simulation with MATLAB/Simulink VR Sink." ]
}

# --- PROTO Definition for Dynamic Reactor Body ---
# This PROTO defines the main reactor cylinder, allowing its color and transparency
# to be controlled dynamically through input fields.
PROTO DynamicReactorBody [
  field SFColor reactor_color_input 0.6 0.8 0.9        # Input field for reactor color
  field SFFloat reactor_transparency_input 0.0         # Input field for reactor transparency
]
{
  Transform {
    translation 0 0 0
    children [
      Shape {
        appearance Appearance {
          # Define (DEF) the material node within the PROTO so its properties can be ROUTEd to.
          material DEF DYNAMIC_REACTOR_BODY_MATERIAL_NODE Material {
            diffuseColor IS reactor_color_input       # 'IS' connects to the PROTO's color input
            transparency IS reactor_transparency_input  # 'IS' connects to the PROTO's transparency input
            specularColor 0.8 0.8 0.8 
            shininess 0.1
          }
        }
        geometry Cylinder { height 5.0 radius 2.0 }
      }
    ]
  }
}

# --- Common PROTO Definitions ---
# PROTOTYPE (PROTO) definitions allow for reusable components within the VRML scene.
PROTO Valve [ # Reusable Valve component
  field SFVec3f position 0 0 0
  field SFFloat size 0.15
]
{
  Transform { 
    translation IS position 
    children [ 
      Shape { 
        appearance Appearance { 
          material Material { 
            diffuseColor 0.9 0.5 0.1 
            specularColor 1 1 1 
            shininess 0.2 
          } 
        } 
        geometry Sphere { radius IS size } 
      } 
    ] 
  }
}

# --- Material Definitions ---
# Centralized material definitions (using DEF/USE) for consistency and easier modification
# across multiple objects in the scene.
DEF REACTOR_BODY_MATERIAL Material { 
  diffuseColor 0.6 0.8 0.9 
  specularColor 0.8 0.8 0.8 
  shininess 0.1 
}

DEF PIPE_MATERIAL Material { 
  diffuseColor 0.4 0.4 0.4 
  specularColor 0.7 0.7 0.7 
  shininess 0.1 
}

DEF AGITATOR_BLADE_MATERIAL Material { 
  diffuseColor 0.8 0.2 0.2 
  specularColor 0.9 0.9 0.9 
  shininess 0.1 
}

DEF AGITATOR_SHAFT_MATERIAL Material { 
  diffuseColor 0.9 0.9 0.0 
  specularColor 0.9 0.9 0.9 
  shininess 0.1 
}

DEF SENSOR_MATERIAL Material { 
  diffuseColor 0.2 0.7 0.2 
  specularColor 0.8 0.8 0.8 
  shininess 0.1 
}

DEF BASE_MATERIAL Material { 
  diffuseColor 0.3 0.3 0.3 
  specularColor 0.6 0.6 0.6 
  shininess 0.1 
}

# --- Basic Geometries ---
# Defines the cone shape for the reactor's drain.
DEF DRAIN_CONE Transform { 
  translation 0 -3.3 0 
  children [ 
    Shape { 
      appearance Appearance { 
        material USE PIPE_MATERIAL 
      } 
      geometry Cone { 
        bottomRadius 0.4 
        height 0.8 
      } 
    } 
  ] 
}

# --- REACTOR BODY INSTANTIATION ---
# This line creates an instance of the 'DynamicReactorBody' PROTO in the scene.
DEF REACTOR_BODY_INSTANCE DynamicReactorBody { }

# --- AGITATOR (Mixer) ---
# Defines the agitator shaft and blades. Its rotation property is exposed for dynamic control.
DEF AGITATOR Transform {
  translation 0 1 0
  rotation 0 1 0 0 # Default rotation (will be dynamically updated)
  children [
    Transform { 
      translation 0 1.5 0 
      children [ 
        Shape { 
          appearance Appearance { 
            material USE AGITATOR_SHAFT_MATERIAL 
          } 
          geometry Cylinder { 
            height 3.0 
            radius 0.1 
          } 
        } 
      ] 
    }
    Transform { 
      translation 0 0 0 
      rotation 0 1 0 0.785 
      children [ 
        Shape { 
          appearance Appearance { 
            material USE AGITATOR_BLADE_MATERIAL 
          } 
          geometry Box { 
            size 1.5 0.1 0.5 
          } 
        } 
      ] 
    }
    Transform { 
      translation 0 0 0 
      rotation 0 1 0 2.356 
      children [ 
        Shape { 
          appearance Appearance { 
            material USE AGITATOR_BLADE_MATERIAL 
          } 
          geometry Box { 
            size 1.5 0.1 0.5 
          } 
        } 
      ] 
    }
  ]
}

# --- LIQUID (Inside Reactor) ---
# Defines the liquid within the reactor. Its position (level) and transparency
# are exposed for dynamic control.
DEF LIQUID Transform {
  translation 0 -1 0 # Default position (Y-axis translation will be dynamically updated)
  children [
    Shape {
      appearance Appearance {
        # Define (DEF) the material node for the liquid so its transparency can be controlled.
        material DEF LIQUID_MATERIAL_NODE Material {
          diffuseColor 0.2 0.6 1.0
          transparency 0.5 # Default transparency
        }
      }
      geometry Cylinder { 
        height 2.0 
        radius 1.9 
      }
    }
  ]
}

# --- PIPES and VALVES ---
# Defines the inlet and outlet pipe structures, including instances of the Valve PROTO.
DEF INLET_PIPE Transform { 
  translation -2.0 2.0 0 
  rotation 0 0 1 1.57 
  children [ 
    Valve { 
      position 0 0 0.5 
      size 0.15 
    } 
    Shape { 
      appearance Appearance { 
        material USE PIPE_MATERIAL 
      } 
      geometry Cylinder { 
        height 1.0 
        radius 0.2 
      } 
    } 
    Transform { 
      translation 0 0 0.5 
      children [ 
        Shape { 
          appearance Appearance { 
            material USE PIPE_MATERIAL 
          } 
          geometry Sphere { 
            radius 0.15 
          } 
        } 
      ] 
    } 
  ] 
}

# --- VALVE KNOB ---
# Defines the valve knob. Its rotation property is exposed for dynamic control.
DEF VALVE_KNOB Transform {
  translation -2.0 2.8 0
  rotation 0 1 0 0 # Default rotation
  children [ 
    Shape { 
      appearance Appearance { 
        material USE PIPE_MATERIAL 
      } 
      geometry Sphere { 
        radius 0.2 
      } 
    } 
  ]
}

DEF OUTLET_PIPE Transform { 
  translation 2.0 -2.0 0 
  rotation 0 0 1 1.57 
  children [ 
    Valve { 
      position 0 0 -0.6 
      size 0.15 
    } 
    Shape { 
      appearance Appearance { 
        material USE PIPE_MATERIAL 
      } 
      geometry Cylinder { 
        height 1.0 
        radius 0.2 
      } 
    } 
    Transform { 
      translation 0 0 -0.6 
      children [ 
        Shape { 
          appearance Appearance { 
            material USE PIPE_MATERIAL 
          } 
          geometry Sphere { 
            radius 0.15 
          } 
        } 
      ] 
    } 
  ] 
}

# --- SENSORS ---
# Defines the temperature and pressure sensors. Their scale properties are exposed for dynamic control.
DEF TEMP_SENSOR Transform {
  translation 0 0 2.2
  scale 1 1 1 # Default scale
  children [
    Shape { 
      appearance Appearance { 
        material USE SENSOR_MATERIAL 
      } 
      geometry Sphere { 
        radius 0.2 
      } 
    }
    Transform { 
      translation 0 0 -0.5 
      children [ 
        Shape { 
          appearance Appearance { 
            material USE SENSOR_MATERIAL 
          } 
          geometry Cylinder { 
            height 1.0 
            radius 0.05 
          } 
        } 
      ] 
    }
  ]
}

DEF PRESS_SENSOR Transform {
  translation 0 2.7 0
  scale 1 1 1 # Default scale
  children [ 
    Shape { 
      appearance Appearance { 
        material USE SENSOR_MATERIAL 
      } 
      geometry Box { 
        size 0.4 0.4 0.4 
      } 
    } 
  ]
}

# --- BASE ELEMENTS ---
# Defines the base structures for the reactor.
DEF REACTOR_BASE Transform { 
  translation 0 -2.7 0 
  children [ 
    Shape { 
      appearance Appearance { 
        material USE BASE_MATERIAL 
      } 
      geometry Cylinder { 
        height 0.4 
        radius 2.5 
      } 
    } 
  ] 
}

# --- VIEWPOINT & MISC ---
# Defines the initial camera position for viewing the model.
DEF INITIAL_VIEWPOINT Viewpoint { 
  position 0 0 50.0 
  orientation 0 0 1 0 
  fieldOfView 0.785398 
  description "Initial View" 
}

# ProximitySensor can detect when the user's viewpoint enters/leaves a defined region.
DEF REACTOR_PROXIMITY ProximitySensor { 
  size 10 10 10 
  center 0 0 0 
}

# --- SCRIPT NODE FOR INTERNAL LOGIC ---
DEF REACTOR_TRANSPARENCY_SWITCH Script { 
  eventIn SFBool set_transparency 
  eventOut SFFloat transparency_changed 
  url "javascript: 
    function set_transparency(value) { 
      if (value) 
        transparency_changed = 0.7; 
      else 
        transparency_changed = 0.0; 
    }" 
}
